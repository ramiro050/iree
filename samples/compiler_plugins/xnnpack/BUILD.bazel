# Copyright 2023 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:build_defs.oss.bzl", "iree_compiler_register_plugin", "iree_gentbl_cc_library", "iree_tablegen_doc", "iree_td_library")

package(
    default_visibility = ["//visibility:public"],
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

cc_library(
    name = "defs",
    includes = ["src"],
)

cc_library(
    name = "registration",
    srcs = [
        "src/PluginRegistration.cpp",
    ],
    deps = [
        ":IR",
        ":Transforms",
        ":defs",
        "//compiler/src/iree/compiler/PluginAPI",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Pass",
    ],
)

iree_compiler_register_plugin(
    plugin_id = "xnnpack_sample",
    target = ":registration",
)

iree_td_library(
    name = "td_files",
    srcs = [
        "src/xnnpack_sample/IR/XnnpackOps.td",
        "src/xnnpack_sample/Transforms/Passes.td",
    ],
    deps = [
        "@llvm-project//mlir:ControlFlowInterfacesTdFiles",
        "@llvm-project//mlir:FuncTdFiles",
        "@llvm-project//mlir:InferTypeOpInterfaceTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:SideEffectInterfacesTdFiles",
        "@llvm-project//mlir:ViewLikeInterfaceTdFiles",
    ],
)

cc_library(
    name = "IR",
    srcs = [
        "src/xnnpack_sample/IR/XnnpackDialect.cpp",
        "src/xnnpack_sample/IR/XnnpackOps.cpp",
        "src/xnnpack_sample/IR/XnnpackOps.cpp.inc",
    ],
    hdrs = [
        "src/xnnpack_sample/IR/XnnpackDialect.h",
        "src/xnnpack_sample/IR/XnnpackOps.h",
        "src/xnnpack_sample/IR/XnnpackOps.h.inc",
    ],
    deps = [
        ":XnnpackOpsGen",
        ":defs",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Support",
    ],
)

iree_gentbl_cc_library(
    name = "XnnpackOpsGen",
    tbl_outs = [
        (
            ["--gen-dialect-decls"],
            "src/xnnpack_sample/IR/XnnpackDialect.h.inc",
        ),
        (
            ["--gen-dialect-defs"],
            "src/xnnpack_sample/IR/XnnpackDialect.cpp.inc",
        ),
        (
            ["--gen-op-decls"],
            "src/xnnpack_sample/IR/XnnpackOps.h.inc",
        ),
        (
            ["--gen-op-defs"],
            "src/xnnpack_sample/IR/XnnpackOps.cpp.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "src/xnnpack_sample/IR/XnnpackOps.td",
    deps = [":td_files"],
)

cc_library(
    name = "Transforms",
    srcs = [
        "src/xnnpack_sample/Transforms/LegalizeXnnpack.cpp",
    ],
    hdrs = [
        "src/xnnpack_sample/Transforms/Passes.h",
        "src/xnnpack_sample/Transforms/Passes.h.inc",
    ],
    deps = [
        ":IR",
        ":PassesIncGen",
        ":defs",
        "//compiler/src/iree/compiler/Dialect/Flow/IR",
        "//compiler/src/iree/compiler/Codegen/Dialect:IREECodegenDialect",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Pass",
    ],
)

iree_gentbl_cc_library(
    name = "PassesIncGen",
    tbl_outs = [
        (
            ["--gen-pass-decls"],
            "src/xnnpack_sample/Transforms/Passes.h.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "src/xnnpack_sample/Transforms/Passes.td",
    deps = [
        ":td_files",
        "@llvm-project//mlir:PassBaseTdFiles",
    ],
)

iree_tablegen_doc(
    name = "XnnpackDialectDocGen",
    tbl_outs = [
        (
            [
                "--gen-dialect-doc",
                "-dialect=xnnpack",
            ],
            "src/xnnpack_sample/IR/XnnpackDialect.md",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "src/xnnpack_sample/IR/XnnpackOps.td",
    deps = [":td_files"],
)
